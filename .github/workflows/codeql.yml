# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#

# This is "Advanced" because it is using this codeql.yml workflow and not using GitHub's built-in "Default" CodeQL workflow
name: "CodeQL Advanced"

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '.github/**'
      - '.qodana/**'
      - '.gitattributes'
      - '.gitignore'
      - 'agent_icons/**'
      - 'documentation-payload/**'
      - 'agent_capabilities.json'
      - 'config.json'
      - 'LICENSE'
      - 'qodana.yaml'
      - 'README.MD'
  pull_request:
    branches: [ "main", "dev" ]
    paths-ignore:
      - '.github/**'
      - '.qodana/**'
      - '.gitattributes'
      - '.gitignore'
      - 'agent_icons/**'
      - 'documentation-payload/**'
      - 'agent_capabilities.json'
      - 'config.json'
      - 'LICENSE'
      - 'qodana.yaml'
      - 'README.MD'
  schedule:
    - cron: '32 7 * * 4'

jobs:
  analyze:
    name: Analyze
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners
    # Consider using larger runners for possible analysis time improvements.
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'go' ]
        # CodeQL supports [ 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift' ]
        # Use only 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use only 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.

          # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          # queries: security-extended,security-and-quality

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

      - name: "GoVulnCheck: Container"
        id: govulncheck_container
        uses: golang/govulncheck-action@v1
        with:
          go-version-input: '1.21'
          work-dir: './Payload_Type/merlin/container'
          go-package: './...'

      - name: "Gosec Security Scanner: Container"
        id: gosec_container
        uses: securego/gosec@master
        with:
          args: './Payload_Type/merlin/container/...'

      - name: "Gosec Security Scanner: Agent"
        id: gosec_agent
        uses: securego/gosec@master
        with:
          args: './Payload_Type/merlin/agent/...'

      - name: Go Report Card - Install
        id: goreportcard_install
        working-directory: /tmp
        run: |
          git clone https://github.com/gojp/goreportcard.git
          cd goreportcard
          make install
          go install ./cmd/goreportcard-cli

      - name: Go Report Card - Run
        id: goreportcard_run
        run: 'goreportcard-cli -v -d Payload_Type/merlin/container' # This renames the files in the ./rpc directory to *.grc.bak causing builds to fail